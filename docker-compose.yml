services:
  unique.shoes.frontend:
    image: ${DOCKER_REGISTRY-}uniqueshoes_frontend:1.0
    container_name: Unique.Shoes.Frontend
    build:
      context: ./unique.shoes.frontend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
  unique.shoes.backend.accountapi:
    image: ${DOCKER_REGISTRY-}uniqueshoes_accountservice:1.0
    container_name: Unique.Shoes.Backend.AccountAPI
    depends_on:
      postgres_db:
        condition: service_healthy
    build:
      context: ./unique.shoes.backend
      dockerfile: Unique.Shoes.AccountAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;http://+:443
    ports:
       - "8081:80"
    restart: unless-stopped
  unique.shoes.backend.marketapi:
    image: ${DOCKER_REGISTRY-}uniqueshoes_marketservice:1.0
    container_name: Unique.Shoes.Backend.MarketAPI
    depends_on:
      postgres_db:
        condition: service_healthy
    build:
      context: ./unique.shoes.backend
      dockerfile: Unique.Shoes.MarketAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;http://+:443
    volumes:
      - uploads:/app/Uploads
    ports:
       - "8082:80"
    restart: unless-stopped
  postgres_db:
    image: postgres:17.0-bookworm
    container_name: Unique.Shoes.PostgreSQL
    environment:
        POSTGRES_DB: "uniqueshoes"
        POSTGRES_USER: "practice_user"
        POSTGRES_PASSWORD: "root"
    ports:
      - "5432:80"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  #PgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: Unique.Shoes.PgAdmin
    environment:
      PGADMIN_DEFAULT_EMAIL: qwerty11ert@gmail.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres_db
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 10s
      timeout: 10s
      start_period: 160s
      retries: 3
  #Redis
  redis_cache:
    image: redis:7.4-bookworm
    container_name: Unique.Shoes.Redis
    environment:
      - REDIS_PASSWORD=root
      - REDIS_USER=admin
      - REDIS_USER_PASSWORD=admin
    ports:
      - "6380:6379"
    volumes:
      - ./redis_cache:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "root", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
  nginx:
    image: nginx:latest
    container_name: Unique.Shoes.NGINX
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - unique.shoes.backend.accountapi
      - unique.shoes.frontend
volumes:
  uploads: